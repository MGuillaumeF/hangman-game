name: HANGMAN-GAME - RELEASE

on:
  push:
    branches: [ main ]
  pull_request:
    branches: 
      - main

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  BOOST_VERSION: 77
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

permissions: write-all

jobs:

 build-client:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2
      
    - name: Install client's dependencies
      working-directory: ${{github.workspace}}/client
      run: npm install

    - name: Build client
      working-directory: ${{github.workspace}}/client
      run: npm run build

    - name: Archive IHM
      uses: actions/upload-artifact@v2
      with:
        name: IHM-Hangman-Game
        path: ${{github.workspace}}/client/build

 build-server-linux:
    needs: [build-client]
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0

    - uses: actions/download-artifact@v2
      with:
        name: IHM-Hangman-Game
        path: ${{github.workspace}}/client/build

    - name: Install boost
      uses: MarkusJx/install-boost@v2.0.0
      id: install-boost
      with:
        boost_version: 1.${{env.BOOST_VERSION}}.0

    - name: Generate target
      run: cmake -S ${{github.workspace}}/server -B ${{github.workspace}}/server/bin -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_CXX_USE_RESPONSE_FILE_FOR_INCLUDES=OFF -DCMAKE_CXX_COMPILER=g++ -DCMAKE_C_COMPILER=gcc  -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      env:
        BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

    - name: Build server
      working-directory: ${{github.workspace}}/server
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/server/bin

    - name: Package server
      working-directory: ${{github.workspace}}/server/bin
      # Build your program with the given configuration
      run: cpack -G "ZIP;DEB"

    - name: Archive Server ZIP
      uses: actions/upload-artifact@v2
      with:
        name: Server-Hangman-Game-Linux
        path: ${{github.workspace}}/server/bin/HangmanGame-0.1.0-Linux.zip

    - name: Archive Server DEB
      uses: actions/upload-artifact@v2
      with:
        name: Server-Hangman-Game-Linux
        path: ${{github.workspace}}/server/bin/HangmanGame-0.1.0-Linux.deb

 install-server-linux:
    needs: [build-server-linux]
    runs-on: ubuntu-latest
    steps:

    - uses: actions/download-artifact@v2
      with:
        name: Server-Hangman-Game-Linux

    - name: install
      run: sudo dpkg -i HangmanGame-0.1.0-Linux.deb

    - name: display installation tree
      run: tree /usr/HangmanGame

    - name: try run
      working-directory: /usr/HangmanGame
      run: ./HangmanGame

 build-server-win:
    needs: [build-client]
    runs-on: windows-latest
    steps:

    - uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
        name: IHM-Hangman-Game
        path: ${{github.workspace}}/client/build

    - name: Install boost
      uses: MarkusJx/install-boost@v2.0.0
      id: install-boost
      with:
        boost_version: 1.${{env.BOOST_VERSION}}.0
        # OPTIONAL: Specify a platform version
        platform_version: 2019
        # OPTIONAL: in workspace by default
        boost_install_dir: 'D:/'

    - name: Generate target 
      run: cmake -S ${{github.workspace}}/server -B ${{github.workspace}}/server/bin
      env:
        BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

    - name: Build server windows
      working-directory: ${{github.workspace}}/server
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/server/bin --config ${{env.BUILD_TYPE}}

    - name: Package server
      working-directory: ${{github.workspace}}/server/bin
      # Build your program with the given configuration
      run: cpack -G "ZIP;NSIS"

    - name: Archive Server windows ZIP
      uses: actions/upload-artifact@v2
      with:
        name: Server-Hangman-Game-Win
        path: ${{github.workspace}}/server/bin/HangmanGame-0.1.0-win64.exe

    - name: Archive Server windows NSIS
      uses: actions/upload-artifact@v2
      with:
        name: Server-Hangman-Game-Win
        path: ${{github.workspace}}/server/bin/HangmanGame-0.1.0-win64.exe

 build-server-MacOSX:
    needs: [build-client]
    runs-on: macos-11
    steps:

    - uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
        name: IHM-Hangman-Game
        path: ${{github.workspace}}/client/build

    - name: Install boost
      uses: MarkusJx/install-boost@v2.0.0
      id: install-boost
      with:
        boost_version: 1.${{env.BOOST_VERSION}}.0

    - name: Generate target
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -S ${{github.workspace}}/server -B ${{github.workspace}}/server/bin -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_CXX_USE_RESPONSE_FILE_FOR_INCLUDES=OFF -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang  -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      env:
        BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

    - name: Build server
      working-directory: ${{github.workspace}}/server
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/server/bin

    - name: Package server
      working-directory: ${{github.workspace}}/server/bin
      # Build your program with the given configuration
      run: cpack -G "ZIP"

    - name: Archive Server ZIP
      uses: actions/upload-artifact@v2
      with:
        name: Server-Hangman-Game-MacOSX
        path: ${{github.workspace}}/server/bin/HangmanGame-0.1.0-Darwin.zip
