name: HANGMAN-GAME - DEFAULT WINDOWS

on:
  workflow_dispatch:
  push:
    branches: [ hotfix/* ]
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  BOOST_VERSION: 1.80.0
  APPLICATION_VERSION: 0.1.0
  CPP_COSO_VERSION: 0.2.1
  APPLICATION_NAME: HangmanGame
  DB_POPULATE: CREATE USER odb_test@localhost;CREATE DATABASE odb_test;GRANT ALL PRIVILEGES ON *.* TO odb_test@localhost WITH GRANT OPTION;FLUSH PRIVILEGES;
  DB_USER: root
  DB_PWD: root
  ODB_DOWNLOAD_DEST: D:/

permissions: write-all

jobs:
 build-debug-Windows:
    env:
      BUILD_TYPE: Debug
    runs-on: windows-latest
    if: github.actor != 'dependabot[bot]'
    steps:

    - uses: actions/checkout@v3
    
    - name: Create reports directory
      run: mkdir ${{github.workspace}}/server/reports

    - uses: actions/download-artifact@v3
      if: github.actor == 'dependabot[bot]'
      with:
        name: IHM-Hangman-Game
        path: ${{github.workspace}}/client/build

    - name: Install boost
      uses: MarkusJx/install-boost@v2.4.3
      id: install-boost
      with:
        boost_version: ${{env.BOOST_VERSION}}
        # OPTIONAL: in workspace by default
        boost_install_dir: 'D:/'

    - name: Install ODB_ROOT
      working-directory: ${{github.workspace}}/data-management/tools/install-odb
      run: |
        npm install
        npm start
        echo "D:\\odb-2.4.0-i686-windows\\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: generate model
      working-directory: ${{github.workspace}}/data-management/src/model
      run: |
        odb --version
        mkdir sqlite
        copy ./*.* ./sqlite/
        cd sqlite
        odb --database sqlite --generate-query --generate-schema --std c++14 -I${{ steps.install-boost.outputs.BOOST_ROOT }}/include/ -I${{github.workspace}}/data-management/src/model *.hxx

    - name: Install lib odb
      working-directory: ${{github.workspace}}
      run: |
        git clone https://github.com/Microsoft/vcpkg
        cd vcpkg
        git pull
        .\bootstrap-vcpkg.sh
        vcpkg update
        vcpkg integrate install

    - name: add vcpkg in path
      # run: echo "${HOME}/.local/bin" | Out-File -FilePath "${{github.workspace}}/vcpkg" -Encoding utf8 -Append
      # run: echo "${{github.workspace}}/vcpkg" >> $GITHUB_PATH
      run: echo "${{github.workspace}}/vcpkg" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: install cpp dependencies
      run: |
        vcpkg x-update-baseline
        cat vcpkg.json
        vcpkg install

    - name: Install ODB_ROOT
      working-directory: ${{github.workspace}}/data-management/tools/install-odb
      run: |
        npm install
        npm start
        echo "D:\\odb-2.4.0-i686-windows\\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Generate target 
      run: cmake -S ${{github.workspace}} -B ${{github.workspace}}/bin -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_MANIFEST_INSTALL=OFF
      env:
        BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
        ODB_ROOT: D:\\odb-2.4.0-i686-windows

    - name: Archive Generate failed
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: Server-Hangman-Game failed generate
        path: ${{github.workspace}}/bin/CMakeFiles

    - name: Build server windows
      working-directory: ${{github.workspace}}
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/bin --config ${{env.BUILD_TYPE}}

    - name: Unit Tests
      run: ${{github.workspace}}/bin/server/bin/Debug/HangmanGameTest.exe --result_code=no --show_progress=yes --log_level=all --log_format=XML --report_level=detailed --report_format=XML --log_sink=${{github.workspace}}/server/reports/reports.xml --report_sink=${{github.workspace}}/server/reports/reportUT.xml
    
    - name: Archive Test report
      uses: actions/upload-artifact@v3
      with:
        name: Server-Hangman-Game Unit Test (win - temp) - Reports
        path: ${{github.workspace}}/server/reports
